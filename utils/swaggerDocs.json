{
    "openapi": "3.0.0",
    "info": {
      "title": "PRACTICUM",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "https://gg-pac-team7-back.onrender.com"
      }
    ],
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer"
        }
      }
    },
    "tags": [
      {
        "name": "Auth"
      },
      {
        "name": "Profile"
      },
      {
        "name": "Events"
      },
      {
        "name": "Bookmarks"
      },
      {
        "name": "Search (GEO)"
      }
    ],
    "paths": {
      "/api/v1/auth/register": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Register User",
          "description": "Register new user request. All fields required",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "firstName": "Kate",
                    "lastName": "Petrova",
                    "userName": "KatyaP",
                    "email": "petrova95@mail.com",
                    "password": ""
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Created",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "object",
                    "example": {
                      "msg": "New user was successfully registered"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "array",
                    "example": [
                          {
                            "type": "field",
                            "value": "qwertymail.com",
                            "msg": "Wrong address, valid example: yourname@mailservice.com",
                            "path": "email",
                            "location": "body"
                        },
                        {
                            "type": "field",
                            "value": "",
                            "msg": "Minimum length is 4, maximum - 30",
                            "path": "password",
                            "location": "body"
                        },
                        {
                            "type": "field",
                            "value": "qw",
                            "msg": "Minimum length is 3, maximum - 20",
                            "path": "firstName",
                            "location": "body"
                        },
                        {
                            "type": "field",
                            "value": "er",
                            "msg": "Minimum length is 3, maximum - 20",
                            "path": "lastName",
                            "location": "body"
                        },
                        {
                            "type": "field",
                            "value": "ty",
                            "msg": "Minimum length is 3, maximum - 20",
                            "path": "userName",
                            "location": "body"
                        }
                    ]
                    
                  }           
                }
              }
            },
            "409": {
              "description": "Conflict",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "array",
                    "example": [
                          {
                            "type": "field",
                            "value": "qwerty@mail.com",
                            "msg": "Email is already registered",
                            "path": "email",
                            "location": "body"
                          },
                          {
                            "type": "field",
                            "value": "SimpleMan",
                            "msg": "userName is already registered",
                            "path": "userName",
                            "location": "body"
                          }
                    ]   
                  }           
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "array",
                    "example": [{
                      "msg": "Failed to register user"
                    }]
                  }
                }
              }
            }   
          }
        }
      },
      "/api/v1/auth/login": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Login User",
          "description": "User login request. Correct email/password pair is required.",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "email": "newman92@mail.com",
                    "password": ""
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                  "type": "object",
                  "example": {
                    "msg": "Successfully logged in"
                  }
                }
              }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "array",
                    "example": [
                          {
                            "type": "field",
                            "value": "qwertymail.com",
                            "msg": "Wrong address, valid example: yourname@mailservice.com",
                            "path": "email",
                            "location": "body"
                        },
                        {
                            "type": "field",
                            "value": "qwerty",
                            "msg": "Minimum length is 4, maximum - 30",
                            "path": "password",
                            "location": "body"
                        }
                    ]
                  }           
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "array",
                    "example": [
                          {
                            "type": "field",
                            "value": "qwerty@mail.com",
                            "msg": "Wrong login",
                            "path": "login",
                            "location": "body"
                        },
                        {
                            "type": "field",
                            "value": "",
                            "msg": "Wrong password",
                            "path": "password",
                            "location": "body"
                        }
                    ]
                  }           
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "array",
                    "example": [{
                      "msg": "Failed to login"
                    }]
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/auth/me": {
        "get": {
          "tags": [
            "Auth"
          ],
          "summary": "Check User",
          "description": "Authenticating request. Checks whether user is authed or not",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                  "type": "object",
                  "example": {
                    "_id": "d6sa78dasdasyd78as",
                    "msg": "Authorized",
                    "userName": "qwerty",
                    "email": "qwerty@mail.com"
                  }
                }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "array",
                    "example": [
                          {
                            "type": "key",
                            "value": "d6sa78dasdasyd78as",
                            "msg": "Wrong credentials",
                            "path": "userId",
                            "location": "user"
                        }
                    ]
                  }           
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "array",
                    "example": [{
                      "msg": "Failed to authenticate"
                    }]
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/profile": {
        "get": {
          "tags": [
            "Profile"
          ],
          "summary": "User profile",
          "description": "If successful, returns logged-in user data along with all bookmarks",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "object",
                    "example": {
                      "_id": "d6sa78dasdasyd78asasfasfaf",
                      "firstName": "firstname",
                      "lastName": "lastname",
                      "userName": "qwerty",
                      "avatarUrl": "/avatars/default.png",
                      "bookmarks": []
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "array",
                    "example": [{
                      "msg": "Failed to load your profile data"
                    }]
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/profile/@{username}": {
        "get": {
          "tags": [
            "Profile"
          ],
          "summary": "Other User Profile",
          "description": "If successful, returns specified user's data along with all bookmarks",
          "parameters":[
            {
              "name": "username",
              "in": "path",
              "schema": {
                "type": "string"
              },
              "required":true,
              "example":"Sarah90"
            }
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "example": {
                      "firstName": "Sarah",
                      "lastName": "Altman",
                      "userName": "Sarah90",
                      "avatarUrl": "/avatars/macaw.png",
                      "bookmarks": [
                          {
                              "event": {
                                  "_id": "66cbaaa5c3e2e2a9c6730df5",
                                  "title": "Wake County Animal Center",
                                  "startDate": "2024-08-01T02:00:00.000Z",
                                  "endDate": "2024-10-01T14:00:00.000Z",
                                  "address": "820 Beacon Lake Dr, Raleigh, NC 27610",
                                  "coordinates": [
                                      35.7919433,
                                      -78.5719131
                                  ],
                                  "description": "Here you will find a true friend!",
                                  "restrictions": "none",
                                  "hostName": "Wake County Animal Center",
                                  "createdAt": "2024-08-25T22:05:25.588Z",
                                  "updatedAt": "2024-08-25T22:05:25.588Z",
                                  "__v": 0,
                                  "category": "animal",
                                  "eventUrl": "http://www.wakegov.com/pets",
                                  "eventImages": [
                                      ""
                                  ]
                              }
                          }
                      ]
                  }
                  }
                }
              }
            },
            "302": {
              "description": "Found",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "array",
                    "example": [
                        {
                          "location": "/profile",
                          "msg": "Redirect required"
                        }
                    ]
                  }           
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "array",
                    "example": [
                          {
                            "type": "params",
                            "value": "username",
                            "msg": "Wrong credentials provided, has to be `@username`",
                            "path": "path",
                            "location": "req.params"
                          }
                    ]   
                  }           
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "array",
                    "example": [{
                      "msg": "Failed to load user's data"
                    }]
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/profile/edit": {
        "get": {
          "tags": [
            "Profile"
          ],
          "summary": "User profile edit",
          "description": "If successful, returns logged-in user data and some extras for editing mode",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "example": {
                      "_id": "66d6d3a18a112b",
                      "firstName": "Ekaterina",
                      "lastName": "Petrova",
                      "userName": "KatyaP",
                      "avatarUrl": "/avatars/face2.png",
                      "avatarsList": [
                          "/avatars/default.png",
                          "/avatars/enlighten.png",
                          "/avatars/face.png",
                          "/avatars/face2.png",
                          "/avatars/face3.png",
                          "/avatars/deer.png",
                          "/avatars/ganesha.png",
                          "/avatars/koi.png",
                          "/avatars/macaw.png",
                          "/avatars/panda-bear.png",
                          "/avatars/turtle.png",
                          "/avatars/bear.png",
                          "/avatars/kangaroo.png",
                          "/avatars/sloth.png"
                      ]
                  }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "array",
                    "example": [{
                      "msg": "Failed to load profile data"
                    }]
                  }
                }
              }
            }
          }
        },
        "put": {
          "tags": [
            "Profile"
          ],
          "summary": "User profile update",
          "description": "If successful, updates user data in database. Requires valid password, validator rules are applied",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "firstName": "Kate",
                    "lastName": "Petrova",
                    "userName": "Katya",
                    "password": "*****",
                    "avatarUrl":"/avatars/face2.png"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "example": 
                      [
                        { 
                          "msg": "Your profile was successfully updated!" 
                        }
                      ]
                    
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "array",
                    "example": [
                          {
                            "type": "field",
                            "value": "*******",
                            "msg": "Incorrect password!",
                            "path": "password",
                            "location": "body"
                          }
                    ]   
                  }           
                }
              }
            },
            "409": {
              "description": "Conflict",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "array",
                    "example": [
                          {
                            "type": "field",
                            "value": "SimpleMan",
                            "msg": "This username is already taken",
                            "path": "userName",
                            "location": "body"
                          }
                    ]   
                  }           
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                    "schema": {
                    "type": "array",
                    "example": [{
                      "msg": "Failed updating profile"
                    }]
                  }
                }
              }
            }
          }
        }
      },
      "/api/v1/events": {
        "get": {
          "tags": [
            "Events"
          ],
          "summary": "Get All Events",
          "description": "If successful, returns all the events from DB as an array of objects. Query parameters may apply.",
          "parameters": [
            {
              "name": "category",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "example": "food",
              "description": "Defines the type of event: food, animal, environment, health, social"
            },
            {
              "name": "date",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "example": "1",
              "description": "Specifies the sorting order by date: '1' - chronological, '-1' - reversed"
            },
            {
              "name": "title",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "example": "-1",
              "description": "Specifies the sorting order by title: '1' - alphabetical, '-1' - reversed"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        },
        "post": {
          "tags": [
            "Events"
          ],
          "summary": "Create Event",
          "description": "Event creation request. If passes the validator, will return status 200 and copy of the created object. For authenticated user only. Non-required attributes: endDate, address, restrictions, eventImages",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "title": "Family Game Night at the Pool",
                    "startDate": "2024-08-29T11:30Z",
                    "endDate": "2024-08-29T13:00Z",
                    "coordinates": [
                      35.6546368,
                      -78.3542594
                    ],
                    "address": "120 Flowers Pkwy, Clayton, NC 27527",
                    "category": "social",
                    "description": "Come with your family to the East Triangle YMCA for some fellowship and games!",
                    "restrictions":"none",
                    "hostName": "East Triangle YMCA",
                    "eventUrl":"https://www.ymcatriangle.org/events/east-triangle-y-family-game-night-pool-0",
                    "eventImages": [
                      "https://www.ymcatriangle.org/sites/default/files/2024-06/uno.jpeg",
                      "https://media.istockphoto.com/id/484794638/photo/volunteer-teacher-reading-to-a-class-of-preschool-kids.jpg?s=612x612&w=0&k=20&c=pq87RBcLRKYYjJmp0s-Y45263_LsCQpokQSakkw5kvQ="
                    ]
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/api/v1/events/{eventId}": {
        "get": {
          "tags": [
            "Events"
          ],
          "summary": "Get Event",
          "description": "If successful, returns the event object with designated ID. Path parameter is required.",
          "parameters":[
            {
              "name": "eventId",
              "in": "path",
              "schema": {
                "type": "string"
              },
              "required":true,
              "example":"66cabb40f08b594b3ee8f1dc"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        },
        "put": {
          "tags": [
            "Events"
          ],
          "summary": "Update Event",
          "description": "If successful, modifies the designated event. Path parameter is required.",
          "parameters":[
            {
              "name": "eventId",
              "in": "path",
              "schema": {
                "type": "string"
              },
              "required":true,
              "example":"66cabb40f08b594b3ee8f1dc"
            }
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "title": "Feed'em All!",
                    "startDate":"2024-08-29T11:30Z",
                    "restrictions":"No pets, no alcohol"
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Events"
          ],
          "summary": "Delete Event",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "description": "If successful, deletes the designated event. Path parameter is required.",
          "parameters":[
            {
              "name": "eventId",
              "in": "path",
              "schema": {
                "type": "string"
              },
              "required":true,
              "example":"66cabb40f08b594b3ee8f1dc"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/api/v1/bookmarks": {
        "get": {
          "tags": [
            "Bookmarks"
          ], 
          "description": "If successful, returns an array of user-related bookmarks. Authentication is required",
          "summary": "Get All Bookmarks",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        },
        "post": {
          "tags": [
            "Bookmarks"
          ],
          "summary": "Create Bookmark",
          "description": "If successful, creates a user-related bookmark. Authentication is required",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "event": "66caa90b77a797377a87948a"
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/api/v1/bookmarks/{bookmarkId}": {
        "get": {
          "tags": [
            "Bookmarks"
          ],
          "summary": "Get Bookmark",
          "description": "If successful, returns the user-related bookmark with designated ID. Authentication and path parameter are required",
          "parameters":[
            {
              "name": "bookmarkId",
              "in": "path",
              "schema": {
                "type": "string"
              },
              "required":true,
              "example":"66cabb40f08b594b3ee8f1dc"
            }
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Bookmarks"
          ],
          "summary": "Delete Bookmark",
          "description": "If successful, deletes the user-related bookmark with designated ID. Authentication and path parameter are required",
          "parameters":[
            {
              "name": "bookmarkId",
              "in": "path",
              "schema": {
                "type": "string"
              },
              "required":true,
              "example":"66cabb40f08b594b3ee8f1dc"
            }
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/api/v1/search": {
        "get": {
          "tags": [
            "Search (GEO)"
          ],
          "summary": "GEO Search",
          "description": "Request to interact with Google Map API, provides GEO data. Use either lat/lng pair or address. Address can be accompanied with 'details' parameter",
          "parameters": [
            {
              "name": "lat",
              "in": "query",
              "schema": {
                "type": "double"
              },
              "example": "35.9042302",
              "description": "Latitude parameter. Must be accompanied with longitude. If successful, returns the address of designated spot"
            },
            {
              "name": "lng",
              "in": "query",
              "schema": {
                "type": "double"
              },
              "example": "-78.65600669999999",
              "description": "Longitude parameter. Must be accompanied with latitude. If successful, returns the address of designated spot"
            },
            {
              "name": "address",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "example": "9650 Strickland Rd #175, Raleigh, NC 27615",
              "description": "Address parameter. Returns the coordinates of designated address. Can be accompanied by 'details' parameter for extra information"
            },
            {
              "name": "details",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "example": "1",
              "description": "Works only in pair with 'address' parameter. Provides with detailed information"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      }
    }
  }

